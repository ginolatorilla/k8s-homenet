---
- name: Preparations
  hosts: localhost
  tasks:
    - name: Install requirements
      tags: requirements
      ansible.builtin.package:
        name:
          - kubernetes-cli
          - helm
      # Homebrew doesn't need root; uncomment if necessary in other OSes.
      # become: true
  roles:
    - role: certificates
      tags: certs

- name: Compute
  hosts: vm_hosts
  tags: compute
  roles:
    - role: hypervisor
    - role: loadbalancer
    - role: virtual_machine

- name: Kubernetes control plane
  tags: s2
  hosts: k8scontrollers
  roles:
    - role: cluster_bootstrap
  become: true

- name: Kubernetes CNI
  hosts: localhost
  tasks:
    - name: Install CNI from manifests
      ansible.builtin.command: kubectl apply -k ../kubernetes/core/00-container-networking
      environment:
        KUBECONFIG: "{{ kubeconfig | expanduser }}"
      register: cni_install
      changed_when: cni_install.rc != 0
    - name: Wait for CNI
      ansible.builtin.command: kubectl wait -n kube-system deploy/calico-kube-controllers --for condition=available
      environment:
        KUBECONFIG: "{{ kubeconfig | expanduser }}"
      register: cni_wait
      changed_when: cni_wait.rc != 0
    - name: Restart CoreDNS # TODO: prevent default CRIO CNI plugin
      ansible.builtin.command: kubectl rollout -n kube-system restart deploy/coredns
      environment:
        KUBECONFIG: "{{ kubeconfig | expanduser }}"
      register: coredns_restart
      changed_when: coredns_restart.rc != 0

- name: Kubernetes workers
  tags: s3
  hosts: k8sworkers
  roles:
    - role: cluster_bootstrap
      vars:
        control_plane_endpoint: "{{ control_plane_hostname }}:{{ control_plane_port }}"
  become: true

- name: Kubernetes config
  tags: s4
  hosts: localhost
  roles:
    - role: cluster_config
      environment:
        KUBECONFIG: "{{ kubeconfig | expanduser }}"
