---
- name: Container networking - Calico
  block:
    - name: Helm repo
      kubernetes.core.helm_repository:
        name: projectcalico
        repo_url: https://docs.tigera.io/calico/charts
    - name: Helm chart
      kubernetes.core.helm:
        name: calico
        chart_ref: projectcalico/tigera-operator
        chart_version: v3.27.3
        release_namespace: tigera-operator
        create_namespace: true
        wait: true
        values_files:
          - ../kubernetes/helm-chart-apps/tigera-operator/values.yaml
    - name: Wait for CNI
      kubernetes.core.k8s:
        definition:
          apiVersion: operator.tigera.io/v1
          kind: Installation
          metadata:
            name: default
        wait: true
        wait_condition:
          type: Ready
          status: "True"
          reason: AllObjectsAvailable
      notify: restart coredns
    - name: Wait for handlers
      ansible.builtin.meta: flush_handlers

- name: Nginx Ingress
  block:
    - name: Namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: nginx-ingress
    - name: Install custom configuration
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: nginx-custom-config
            namespace: nginx-ingress
          data:
            external-status-address: "{{ ingress_controller_address }}"

- name: Certificate manager
  block:
    - name: Namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: cert-manager
    - name: Install secret from generated CA
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: own-ca
            namespace: cert-manager
          data:
            tls.crt: "{{ lookup('file', 'ownca.crt') | b64encode }}"
            tls.key: "{{ lookup('file', 'ownca.key') | b64encode }}"
      no_log: true

- name: PostgreSQL
  block:
    - name: Namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: postgresql
    - name: Install initial admin secret
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: postgresql
            namespace: postgresql
          data:
            postgres-password: "{{ lookup('ansible.builtin.password', 'postgres-primary-password.key', chars=['ascii_letters', 'digits', 'punctuation'], seed='postgres') | b64encode }}"
            replication-password: "{{ lookup('ansible.builtin.password', 'postgres-replica-password.key', chars=['ascii_letters', 'digits', 'punctuation'], seed='replication') | b64encode }}"

- name: ArgoCD
  block:
    - name: Helm repo
      kubernetes.core.helm_repository:
        name: argo
        repo_url: https://argoproj.github.io/argo-helm
    - name: Helm chart
      kubernetes.core.helm:
        name: argocd
        chart_ref: argo/argo-cd
        chart_version: "6.7.18"
        release_namespace: argocd
        create_namespace: true
        wait: true
        values_files:
          - ../kubernetes/helm-chart-apps/argo-cd/values.yaml
