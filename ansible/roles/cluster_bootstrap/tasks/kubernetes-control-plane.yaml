---
- name: HA control plane - keepalived
  block:
    - name: Keepalived static pod manifest
      ansible.builtin.copy:
        src: files/etc/kubernetes/manifests/keepalived.yaml
        dest: /etc/kubernetes/manifests/keepalived.yaml
        mode: "0644"
    - name: Keepalived config directory
      ansible.builtin.file:
        path: /etc/keepalived
        state: directory
    - name: Keepalived config
      ansible.builtin.template:
        src: templates/etc/keepalived/keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
        mode: "0644"
      vars:
        keepalived_state: "{{ (kubernetes_node_type == 'control-leader') | ternary('MASTER', 'BACKUP') }}"
        keepalived_interface: bridge
        keepalived_priority: "{{ (kubernetes_node_type == 'control-leader') | ternary('101', '100') }}"
        keepalived_auth_pass: "12345" # TODO: make this secure
        keepalived_api_server: "{{ control_plane_address }}"
    - name: Keepalived check script
      ansible.builtin.template:
        src: templates/etc/keepalived/check_apiserver.sh.j2
        dest: /etc/keepalived/check_apiserver.sh
        mode: "0744"
      vars:
        keepalived_api_server: "{{ control_plane_address }}"

- name: HA control plane - haproxy
  block:
    - name: HAProxy static pod manifest
      ansible.builtin.copy:
        src: files/etc/kubernetes/manifests/haproxy.yaml
        dest: /etc/kubernetes/manifests/haproxy.yaml
        mode: "0644"
    - name: HAProxy config directory
      ansible.builtin.file:
        path: /etc/haproxy
        state: directory
    - name: HAProxy config
      ansible.builtin.template:
        src: templates/etc/haproxy/haproxy.cfg.j2
        dest: /etc/keepalived/haproxy.conf
        mode: "0644"
      vars:
        haproxy_control_plane_hosts:
          k8s-control-node-0: "192.168.100.25" # Todo: get from con

- name: Cluster bootstrapping
  ansible.builtin.command:
    cmd: kubeadm init --config /etc/kubernetes/kubeadm.yaml
    creates: /etc/kubernetes/manifests/kube*.yaml
  when: kubernetes_node_type == "control-leader"
